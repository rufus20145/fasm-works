;********************************************
;			Оглавление  переключателей
;1 S!WITC						с проверкой на кол-во меток с индексом переключателя	
;2 S!WITCH						самый короткий переключатель по индексу
;2R Перейти_по_переключателю 	Эквивалентно 2
;3 S!WITCA 						парсинг 
;		Парсинги
; в файле SWITCH\PARS.inc
;4 S!WITCL							Эквивалентно 5	переключение по любому регистру
;5 S!WITCS							переключение по совпадению кода символа в памяти
;6 Если_это_совпадает_с_символом_то_перейти 	-синтаксическая форма~ S!WITCL
;7 Если_это_Символ_то_Перейти		~S!WITCS
;*********************************
;*******************************  1 ***************
;   S!WITC	- переключатель с проверкой на количество меток
;+++++++++++++++++++++++++	
	MACRO	S!WITC	NMR,Sboy,[string]
     {     common
	 local	Rsw,SJMP			;label  
		cmp	NMR,[Rsw]			;[RSWT] Проверка на не выход за пределы меток переключения
	JGE	Sboy						;нет ошибок 
		shl	NMR,2				;EBX,2  через 4 байта адрес
		MOV	NMR,[CS:SJMP+NMR]	;EBX,[CS:SJMP+EBX] к адр.конст. + сдвиг на соотв.адрес	
	jmp	NMR
;**************
Rswtch = 0						;Счетчик числа переходов	
label	SJMP	dword			;name dword для32 разрядного адреса, для 64 pp адр. pword
	forward						; здесь выборка string по кол-ву параметров
Rswtch = Rswtch+1   			;local label В зависимости от кол-ва переменных накапл.счетчик
	dd	string					;Формирование адресных констант для 32 разрядного адреса
     common
Rsw	dd	Rswtch	 
    }
;******************************** 2 *********************************
	MACRO	S!WITCH	NMR,[string]
     {common
	 local	SJMP				;label  
		shl	NMR,2				;EBX,2  через 4 байта адрес
		MOV	NMR,[CS:SJMP+NMR]	;EBX,[CS:SJMP+EBX] к адр.конст. + сдвиг на соотв.адрес	
	jmp	NMR
;+++++++++++++++++	
label	SJMP	dword		;name dword дл¤32 разр¤дного адреса, дл¤ 64 pp адр. pword
	forward					; здесь выборка string по кол-ву параметров
	dd	string				;формирование адресных констант для 32 разр¤дного адреса
     common					
    }
;*************************************************************************
;			Перейти_по_переключателю\
;							$Регистра=EAX\
;=>P1 =>P2 =>P3 =>P4 =>P5 =>P6 =>P7 =>P8 =>P9 =>P10 =>P11 =>P12 =>P13 =>P14 =>P15 =>P16
;			
;++++++++++++++++++++++++++++++++++   2R +++++++++++++++++++++++++++++++++++++++

	MACRO	Перейти_по_переключателю NMR,[string]   ;NNNN
{
	 local	SJMP				;label  
		shl	NMR,2				;EBX,2  через 4 байта адрес
		MOV	NMR,[CS:SJMP+NMR]	;EBX,[CS:SJMP+EBX] к адр.конст. + сдвиг на соотв.адрес	
	jmp	NMR
;+++++++++++++++++	
label	SJMP	dword		;name dword дл¤32 разр¤дного адреса, дл¤ 64 pp адр. pword
	forward					; здесь выборка string по кол-ву параметров
	dd	string				;формирование адресных констант для 32 разр¤дного адреса
     common					
    }
;*************************************************************************
;******************************* 3 **********парсинг******************************
	MACRO S!WITCA FEND,[str1,str2]  ;провер¤етс¤ совпадение с регистром al  (EAX-зан¤т)
{     common
		mov	ah,al
	forward							; здесь выборка string по кол-ву параметров
		mov	ah,str1
		xor	ah,al					;совпал символ
	je	str2				
	common
			if   ~FEND eq
	JMP	FEND			
			else
			end if
    }
;*******************************
;			По_переключателю_перейти\
;							$По_значению_Регистра$=EAX\
;							$Переключатель_0_или-N+1$=>P0
;$Работа1=>P1 $Работа2$=>P2 $Работа2$=>P3 $Работа2$=>P4\
; $Работа2$=>P5 $Работа2$=>P6 $Работа2$=>P7 $Работа2$=>P8 $Работа2$=>P9\
; $Работа2$=>P10 $Работа2$=>P11 $Работа2$=>P12 $Работа2$=>P13 $Работа2$=>P14\
; $Работа2$=>P15 $Работа2$=>P16
;+++++++++++++++++++++++++++
;			По_переключателю_перейти\
;				$По_значению_Регистра$=EAX\
;							$Если_переключатель_0_или-N+1$=>EXITER
;									$Работа1=>P1\
;										$Работа2$=>P2
;*******************************
;*********************************                    4
	MACRO По_переключателю_перейти	arg
{
;****************************  на 2 работы переключатель
		push	EAX
	common match	REGI==NMR As == =>P0 As1 == =>P1 As2 == =>P2,arg
	\{		   \MRT	equ	1
			match aww== =>ww,\P0			;если есть хотя бы 1 =, то это не та структура
			\\{	\\MRT	equ	0 \\}
			if	\MRT	eq	1
					S!WITC	NMR,P0,P1,P2
			end if
	\}
;****************************  ТРИ работы переключатель
		common match	REGI==NMR As == =>P0 As1 == =>P1 As2 == =>P2 As3 == =>P3,arg
		\{								;\arg1	equ	\`As#\`Bs
										;\Print!afall   \Bs
		   \MRT	equ	1
			match aww== =>ww,\P3			;если есть хотя бы 1 =, то это не та структура
			\\{	\\MRT	equ	0 \\}
										;\Print!afall   "MRT2="				;
										;\Print!afall   \MRT
										;display 10	
		if	\MRT	eq	1
				S!WITC	NMR,P0,P1,P2,P3
		else
		Print!afall   "ERROR now only 16 argument Write in macro S!tosData_From"	
		end if
		\}
		POP	EAX
}
;****************************