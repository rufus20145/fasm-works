db
dw
dd
dq

размерности ячейки

кавычки для строк
h для 16-ого представления


dbr - макрос для печати с русскими буквами
? - неинициированные данные
xor для обнуления

разница между макросом и вызовом процедуры

entry "sdasd" - точка входа в программу
    затем указывается в сегменте .code

1000 и 1 ночь с Балакиревым на изучение всех команд

прерывание -

прерывание (int) останавливает выполнение программы и переходит к выполнению кода, который обрабатывает прерывание
    iret возвращает управление обратно

call не прерывает выполнение программы
    ret возвращает управление обратно

тонкие вещи по поводу системы команд:

    в блоке if (макропроцессора)
        = - арифметическое сравнение
        eq - текстовое сравнение (equ для присвоения)

    как записывать число в процессоре?
        в десятичном виде,
    inc и dec работают в беззнаковом виде
    loop проверяет ECX на ноль, и если не ноль, то добавляет 1 и идёт на следующий оборот
        для запуска двух циклов на этот регистр надо -2
    двоично-десятичные числа
        после ADD используем DAA, чтобы перевести в десятичный вид (если число больше 9, то переносим единицу в следующий разряд)

    ADDP - сложение на сопроцессоре (процессоре с плавающей точкой)
        в нем при выполнении операций точность получается 81 бит

    CMP - сравнение, работающее как SUB, но не записывает результат в регистр
        если результат отрицательный, то устанавливается флаг S
        если результат ноль, то устанавливается флаг Z
        если результат больше, то устанавливается флаг C

    сдвиги SHIFT
        ROR - циклический сдвиг вправо по регистру

    булевские значения сравниваем с помощью логических операций
        AND - логическое умножение
        OR - логическое сложение
        XOR - логическое исключающее сложение
        NOT - логическое отрицание

    mov destination, source, numberOfBytes{размер byte} (move byte[ebx], )

    rep повторит команду по указанному в ECX количеству

    movsb - копирует байт из [ESI] в [EDI] и увеличивает оба счетчика на 1:
    pushd - помешает в стек 32 бита, дополняя нулями при необходимости

    операторы
        used - указывает, что переменная используется в программе
        defined - проверяет, определен ли идентификатор
        eqtype - проверяет, совпадают ли типы двух идентификаторов (какой тип информации был записан по данному адресу)

    rep делает
    times - однострочное повторение
    repeat - многострочное повторение
    display - выводит на экран во время работы транслятора
    # - конкатенация строк, в т.ч. операторов
    struc - объявление структуры
        внутри .x dw x
        через точку можно обращаться к "полям" структуры


    Макросы:
        [arg] означает varargs
        forward
            something arg ; будет повторяться до конца аргументов


Оформление:
    1 колонка - команды переходов
    2 колонка - команды обработки данных
    комментарии выравнивать
    свои макросы называть м!акрос
    \ позволяет продлить строку на следующую строку